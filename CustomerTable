-- INIT database
-- Customers
CREATE TABLE customers ( --the initial table
  customer_id INT PRIMARY KEY,--primary key is unchanging
  first_name TEXT, -- the names are divided for alphabetical organization by first or last name
  last_name TEXT,
  email TEXT -- this is a company
);

-- Orders
CREATE TABLE orders (
  order_id INT PRIMARY KEY,
  customer_id INT,
  order_date DATE,
  total_amount DECIMAL(10,2),
  status TEXT,
  FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Products
CREATE TABLE products (
  product_id INT PRIMARY KEY,
  product_name TEXT,
  category TEXT
);

-- Order Items
CREATE TABLE order_items (
  order_item_id INT PRIMARY KEY,
  order_id INT,
  product_id INT,
  quantity INT,
  price DECIMAL(10,2),
  FOREIGN KEY (order_id) REFERENCES orders(order_id),
  FOREIGN KEY (product_id) REFERENCES products(product_id)
);
INSERT INTO customers VALUES
(1, 'Alice', 'Wong', 'alice@example.com'),
(2, 'Bob', 'Smith', 'bob@example.com'),
(3, 'Charlie', 'Johnson', 'charlie@example.com'),
(4, 'Diana', 'Lee', 'diana@example.com'),
(5, 'Ethan', 'Garcia', 'ethan@example.com');

INSERT INTO products VALUES
(101, 'Wireless Mouse', 'Electronics'),
(102, 'USB-C Cable', 'Electronics'),
(103, 'Notebook', 'Stationery'),
(104, 'Pen Pack', 'Stationery'),
(105, 'Water Bottle', 'Accessories');

INSERT INTO orders VALUES
(1001, 1, '2023-10-01', 45.00, 'completed'),
(1002, 1, '2023-10-12', 20.00, 'completed'),
(1003, 2, '2023-09-15', 15.00, 'completed'),
(1004, 2, '2023-10-01', 25.00, 'completed'),
(1005, 3, '2023-08-20', 10.00, 'cancelled'),
(1006, 4, '2023-09-05', 30.00, 'completed'),
(1007, 4, '2023-10-02', 40.00, 'completed'),
(1008, 5, '2023-10-05', 50.00, 'completed');
INSERT INTO order_items VALUES
(201, 1001, 101, 1, 25.00), -- Alice
(202, 1001, 102, 2, 10.00), 
(203, 1002, 103, 2, 10.00), -- Alice

(204, 1003, 104, 1, 15.00), -- Bob
(205, 1004, 105, 1, 25.00), -- Bob

(206, 1005, 101, 1, 10.00), -- Charlie (cancelled)

(207, 1006, 103, 3, 10.00), -- Diana
(208, 1007, 101, 1, 25.00), -- Diana
(209, 1007, 104, 1, 15.00),

(210, 1008, 105, 2, 25.00); -- Ethan
-- QUERY database
SELECT 
	c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS customer_name,
    COUNT(o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_spent,
    MAX(o.order_date) AS last_order_date
    )
FROM 
	customers c
JOIN
	orders o ON c.customer_id = o.customer_id
WHERE
	o.status = 'completed'
    
GROUP BY
	c.customer_id, c.first_name, c.last_name
HAVING
	COUNT(o.order_id) >= 2
 ORDER BY
 	total_spent DESC;
